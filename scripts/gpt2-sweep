#!/bin/bash
set -e
PORT=$RANDOM
PORT=$((PORT + 1000))

BS=$1
LR=$2
NAME=bs${BS}-lr$LR
SKIP="--skip_connection=True"
SCALING="--post_encoder_scale=True"
if [ -z "$3" ]; then
    CROSSING="--cross_layer=12 --coalesce_topk=concat --topk_coalesced=False"
else
    if [ "$3" == "none" ]; then
        CROSSING=""
    elif [ "$3" == "btopk" ]; then
        CROSSING="--activation=batchtopk"
    elif [ "$3" == "btopk-tied" ]; then
        CROSSING="--activation=batchtopk --cross_layer=12 --coalesce_topk=concat --topk_coalesced=False"
    elif [ "$3" == "nonskip" ]; then
        CROSSING="" SKIP=""
    elif [ "$3" == "nonskip-tied" ]; then
        CROSSING="--cross_layer=12 --coalesce_topk=concat --topk_coalesced=False" SKIP=""
    elif [ "$3" == "tied" ]; then
        CROSSING="--cross_layer=12 --coalesce_topk=concat --topk_coalesced=False"
    elif [ "$3" == "tied-no-affine" ]; then
        CROSSING="--cross_layer=12 --coalesce_topk=concat --topk_coalesced=False --train_post_encoder=False" SCALING=""
    elif [ "$3" == "cross" ]; then
        # CROSSING="--cross_layer=12 --coalesce_topk=per-layer --topk_coalesced=False"
        # CROSSING="--cross_layer=12 --divide_cross_layer=True --coalesce_topk=per-layer --topk_coalesced=False"
        CROSSING="--cross_layer=12 --divide_cross_layer=True"
        # CROSSING="--cross_layer=12"
    else
        echo "Invalid option: $3"
        exit 1
    fi
    NAME=${NAME}-$3
fi
if [ -z "$4" ]; then
    EF=128
else
    EF=$4
fi
NAME=${NAME}-ef$EF
if [ -z "$5" ]; then
    K=16
else
    K=$5
fi
NAME=${NAME}-k$K

if [ -z "$OPTIMIZER" ]; then
    OPTIMIZER="adam"
else
    NAME=${NAME}-${OPTIMIZER}
fi

if [ -z "$B1" ]; then
    B1=0.9
else
    NAME=${NAME}-b1$B1
fi

SAVE_ARGS="--save_every 100000000000"
if ! [ -z "$DO_SAVE" ]; then
    if [ "$DO_SAVE" == "1" ]; then
        SAVE_ARGS="--save_every 2000"
    else
        SAVE_ARGS="--save_every $DO_SAVE"
    fi
fi

if ! [ -z "$RESUME" ]; then
    # RESUME="--resume"
    RESUME="--finetune checkpoints/gpt2-sweep/$NAME$name"
    SAVE_ARGS=""
fi

# N_DEVICES=2
N_DEVICES=2
# WANDB_ENTITY=eleutherai uv run python -m sparsify \
WANDB_ENTITY=eleutherai uv run torchrun --master_port $PORT --nproc_per_node gpu -m sparsify \
openai-community/gpt2 --ctx_len 128 --filter_bos=True \
--transcode=True $SKIP \
--batch_size=$BS --expansion_factor=$EF --k=$K --tp=$N_DEVICES \
--hookpoints h.0.mlp h.1.mlp h.2.mlp h.3.mlp h.4.mlp h.5.mlp h.6.mlp h.7.mlp h.8.mlp h.9.mlp h.10.mlp h.11.mlp \
--run_name gpt2-sweep/$NAME$name \
$CROSSING \
--b1 $B1 \
$SCALING --normalize_io=True \
$SAVE_ARGS --lr $LR \
--optimizer $OPTIMIZER --lr_warmup_steps 50 $extra \
$RESUME
# --finetune /mnt/ssd-1/nev/e2e/checkpoints/gpt2-sweep/bs8-lr2e-4-none-ef128-k16/
